version: "3.8"

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=info@alkemata.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/acme.json:/letsencrypt/acme.json"
    networks:
      - es_network
    restart: always
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`traefik.innoclass.alkemata.com`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=rdi:$$2y$$05$$POE8bQdStukF12mJ1jWHM.DVGKaF3Bc2pWnGN5SbJzF/TAa98Y1sq"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD} # Use variable from .env
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.enrollment.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - es_network
    restart: always
    volumes:
      - ./database:/usr/share/elasticsearch/data # Mount the "database" directory

  embedsearch:
    build:
      context: .
      args:
        BUILD_ENV: python
    container_name: embedsearch
    volumes:
      - ./classEngine:/app
    working_dir: /app
    depends_on:
      - elasticsearch
    networks:
      - es_network
    environment:
      - ELASTICSEARCH_USER=${ELASTICSEARCH_USER} # Use variable from .env
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD} # Use variable from .env
    restart: "always"

  api-server:
    build:
      context: .
      args:
        BUILD_ENV: server
    container_name: api-server
    volumes:
      - ./classEngine:/app
    working_dir: /app
    depends_on:
      - elasticsearch
    ports:
      - "8000:8000"
    networks:
      - es_network
    environment:
      - ELASTICSEARCH_USER=${ELASTICSEARCH_USER} # Use variable from .env
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD} # Use variable from .env
    restart: "always"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api-server.innoclass.alkemata.com`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=3000"

  frontend-builder:
    image: node:18
    container_name: frontend-builder
    working_dir: /app
    volumes:
      - ./classEngine/frontend:/app
      - ./classEngine/frontend/dist:/app/dist
    command: sh -c "npm install && npm run build"
    restart: "no"

  frontend-server:
    image: node:18
    container_name: frontend-server
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && node server.js"
    ports:
      - "3000:3000"
    depends_on:
      - frontend-builder
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`innoclass.alkemata.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

networks:
  es_network:
    driver: bridge